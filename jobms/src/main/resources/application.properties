spring.application.name=job-service

server.port=8082

job-service.url=http://localhost:8082
company-service.url=http://localhost:8081
review-service.url=http://localhost:8083






spring.datasource.url =jdbc:postgresql://localhost:5432/job
spring.datasource.username = ${DB_DEFAULT_USERNAME}
spring.datasource.password= ${DB_DEFAULT_PASSWORD}
spring.jpa.database=POSTGRESQL
spring.jpa.database-platform =org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

#Zipkin
management.tracing.sampling.probability=1.0
management.tracing.enabled=true
management.zipkin.tracing.enabled=true


#logging for Zipkin
logging.level.io.zipkin=DEBUG
logging.level.io.micrometer.tracing=DEBUG



#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


# Config Server
spring.config.import = optional:configserver:http://localhost:8080
spring.profiles.active = dev

#Actuator
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based


#Retry Configuration
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s

#Rate Limiter Configuration
resilience4j.ratelimiter.instances.companyBreaker.timeoutDuration=0s
resilience4j.ratelimiter.instances.companyBreaker.limitRefreshPeriod=4s
resilience4j.ratelimiter.instances.companyBreaker.limitForPeriod=10
